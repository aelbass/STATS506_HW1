---
title: "HW4"
format: html
editor: visual
---

### Github URL: https://github.com/aelbass/STATS506_HW1.git

## Problem 1

### a. Generate a table of vote count (regardless of party) per year/type. Make sure to sort it by vote count.

```{r}
library(nzelect)
library(tidyverse)
library(tidyr)
library(dplyr)

vote_summary <- nzge %>%
  group_by(election_year, voting_type) %>%
  summarise(total_votes = sum(votes, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(total_votes))

vote_summary
```


### b. For the 2014 election, report the proportion of votes for each party in the Candidate election.

```{r}
candidate_2014 <- nzge %>%
  filter(election_year == 2014, voting_type == "Candidate") %>%
  group_by(party) %>%
  summarise(total_votes = sum(votes, na.rm = TRUE), .groups = "drop") %>%
  mutate(percent_vote = round(100 * total_votes / sum(total_votes), 2)) %>%
  select(party, percent_vote) %>% 
  arrange(desc(percent_vote))

candidate_2014
```

### c. Produce a nice table indicating, for each year, which party won the Candidate vote and which party won the Party vote.

```{r}
winners_by_year <- nzge %>%
  group_by(election_year, voting_type, party) %>%
  summarise(total_votes = sum(votes, na.rm = TRUE), .groups = "drop") %>%
  group_by(election_year, voting_type) %>%
  slice_max(total_votes, n = 1, with_ties = FALSE) %>%
  ungroup() %>%
  pivot_wider(names_from = voting_type,
              values_from = party,
              names_prefix = "winner_") %>%
  arrange(election_year)

winners_by_year
```

## Problem 2


```{r}
atp_matches_2019 <- read_csv("atp_matches_2019.csv")
```

### a. How many tournaments took place in 2019

```{r}
atp_matches_2019 %>%
  mutate(year = str_extract(tourney_id, "^[0-9]{4}")) %>%
  filter(year == "2019") %>%
  summarise(tournaments_2019 = n_distinct(tourney_id))
```

128 tournaments took place in 2019. I looked into the tournament_id for different distinct entries that start with "2019" assuming all tournaments with tourney_date as the last day of 2018 ended in 2019. 


### b. Did any player win more than one tournament? If so, how many players won more than one tournament, and how many tournaments did the most winning player(s) win?

```{r}
tournament_winners <- atp_matches_2019 %>%
  group_by(tourney_id) %>%
  filter(match_num == max(match_num, na.rm = TRUE)) %>% 
  ungroup() %>%
  select(tourney_id, winner_name)

player_wins <- tournament_winners %>%
  count(winner_name, name = "tournaments_won") %>%
  arrange(desc(tournaments_won))
players_more_than_one <- player_wins %>%
  filter(tournaments_won > 1)

#for confirmation,
num_players_more_than_one <- nrow(players_more_than_one)
max_tournaments_won <- max(player_wins$tournaments_won)

player_wins
num_players_more_than_one
max_tournaments_won


```

Yes, from the table above, 17 players won more than one tournament. The most winning player won 9 tournaments, and that was Rafael Nadal.


### c. Is there any evidence that winners have more aces than losers? (If you address this with a hypothesis test, do not use base R functionality - continue to remain in the Tidyverse.)

```{r}
aces_data <- atp_matches_2019 %>%
  select(w_ace, l_ace) %>%
  pivot_longer(cols = c(w_ace, l_ace),
               names_to = "player_type",
               values_to = "aces") %>%
  mutate(player_type = if_else(player_type == "w_ace", "Winner", "Loser"))

aces_data %>%
  group_by(player_type) %>%
  summarise(mean_aces = mean(aces, na.rm = TRUE),
            median_aces = median(aces, na.rm = TRUE),
            sd_aces = sd(aces, na.rm = TRUE),
            n = n())
```

Winners tend to average more aces than losers.

I am not sure if it is enough to get average and std, so I ran a hypothesis test below with a null hypothesis that there is no difference in the mean number of aces between winners and losers.

```{r}
library(tidyverse)
library(broom)

ace_tidytest <- aces_data %>%
  group_by(player_type) %>%
  summarise(aces = list(aces)) %>%
  summarise(tidy_result = list(tidy(t.test(aces[[1]], aces[[2]], var.equal = FALSE)))) %>%
  unnest(tidy_result)

ace_tidytest
```

And since p < 0.05, there’s evidence that winners tend to serve more aces.


### d. Identify the player(s) with the highest win-rate. (Note that this is NOT asking for the highest number of wins.) Restrict to players with at least 5 matches.

```{r}
player_stats <- atp_matches_2019 %>%
  select(winner_name, loser_name) %>%
  pivot_longer(cols = c(winner_name, loser_name),
               names_to = "result",
               values_to = "player") %>%
  mutate(is_win = if_else(result == "winner_name", 1, 0))

player_summary <- player_stats %>%
  group_by(player) %>%
  summarise(
    matches = n(),
    wins = sum(is_win),
    win_rate = wins / matches
  ) %>%
  filter(matches >= 5) %>%
  arrange(desc(win_rate))

player_summary %>%
  filter(win_rate == max(win_rate))
```

Rafael Nadal is has the highest win rate, ~87%. He played 69 games.

## Problem 3

```{r}
covid_cases <- read_csv("us-states.csv")
```


### a. How many major and minor spikes in cases were there?

```{r}
covid_cases <- covid_cases %>%
  mutate(date = as.Date(date))

# Basic scatter plot of date vs. cases, colored by state
ggplot(covid_cases, aes(x = date, y = cases, color = state)) +
  geom_point(alpha = 0.5, size = 0.7) +
  theme_minimal(base_size = 12) +
  labs(
    title = "COVID-19 Case Trends Across U.S. States",
    subtitle = "Scatter plot of daily rolling cases of reported cases by state",
    x = "Date",
    y = "Reported Cases",
    color = "State"
  ) +
  theme(
    legend.position = "none", # remove legend for clarity (too many states)
    plot.title = element_text(face = "bold", size = 14),
    plot.subtitle = element_text(size = 11)
  )
```

I made plots with different x-axis grid (e.g. by month instead of by year) but it looked so crowded. From plotting date versus reported cases as shown above, I would say that there are 3 minor (~ March 2020, July 2020 and March 2021) spikes and 5 major spikes (~ Jan. 2021, Sept. 2021, Feb 2022, July 2022 and Dec. 2022).


### b. For the states with the highest and lowest overall rates per population, what differences do you see in their trajectories over time?

```{r}
library(tidyverse)

highest_and_lowest <- covid_cases %>%
  group_by(state) %>% 
  summarise(mean_rate = mean(cases_avg_per_100k, na.rm = TRUE)) %>% 
  arrange(desc(mean_rate))

highest_and_lowest

covid_cases %>%
  filter(state %in% c("American Samoa", "Maryland")) %>%
  ggplot(aes(x = date, y = cases_avg_per_100k, color = state)) +
  geom_line() +
  labs(
    title = "COVID-19 Average Cases per 100k",
    x = "Date",
    y = "Cases per 100k",
    color = "State"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(size = 8)
  ) +
  scale_x_date(date_breaks = "6 month", date_labels = "%b %Y")
```

I ran a tidyverse function to get the states with the highest and lowest overall rates per population over the 3-year period of the data. American Samoa had the hghest average of overall rates while Maryland had the lowest average. For the differences in the trajectory, 
1- In Maryland, the cases started showing up as soon as the pandemic started early 2020; however, no noticeable cases were recorded in American Samoa until late 2021. 
2- American Samoa’s peak in early 2022 is extremely high; the rate per 100k surpasses Maryland’s at any time. Maryland’s waves are smaller but more frequent.
3- Maryland’s waves are smooth and extended, showing prolonged transmission periods. American Samoa’s spikes are short and steep, suggesting isolated outbreaks that were quickly controlled.


### c. Identify, to the best of your ability without a formal test, the first five states to experience Covid in a substantial way.

```{r}
# made a new data set to only include states with 30+ (substantial) cases per 100k between april and june 2020
start_date <- as.Date("2020-04-01")
end_date <- as.Date("2020-06-01")
covid_apr_jun <- covid_cases[covid_cases$date >= start_date & covid_cases$date < end_date, ]
states_to_keep <- unique(covid_apr_jun$state[covid_apr_jun$cases_avg_per_100k >= 30])
covid_2020_filtered <- covid_cases[covid_cases$date < end_date & covid_cases$state %in% states_to_keep, ]

ggplot(covid_2020_filtered, aes(x = date, y = cases_avg_per_100k, color = state)) +
  geom_line(alpha = 0.5) +
  labs(
    title = "COVID-19 Average Cases per 100k (2020) – High Impact States",
    x = "Date",
    y = "Cases per 100k",
    color = "State"
  ) +
  theme_minimal() +
  theme(legend.position = "right") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b")
```


After trialing with so many graphs, I made a new data set to only include states with 30+ (substantial) cases per 100k between April and June 2020. The spikes started happening around that time, so I picked the date and number of cases per 100k based on that.
The first five states to experience Covid in a substantial way were New York, New Jersey, Louisiana, Guam and Rhaode Island. Massachusetts and Connecticut were very close, but I would consider them in the 6th and seventh positions. 

